{% requirePermission "sproutForms-editForms" %}

{% import "_includes/forms" as forms %}
{% import "sprout-base-fields/_includes/forms" as sproutFields %}

<div id="sprout-content">
    {% if field is not defined and fieldId is defined %}
        {% set field = craft.app.fields.getFieldById(fieldId) %}
        {% if not field %}
            {% exit 404 %}
        {% endif %}
    {% endif %}

    {% set fieldTypes = craft.sproutForms.getRegisteredFields() %}

    <input type="hidden" name="formId" value="{{ form.id }}">

    {% if field.id %}
        <input type="hidden" name="fieldId" value="{{ field.id }}">
    {% endif %}

    {% if field.allowRequired %}
        {{ forms.lightswitchField({
            label: "Required"|t('sprout-forms'),
            name: 'required',
            on: field.required,
            onLabel: "Required"|t('sprout-forms'),
            offLabel: "Optional"|t('sprout-forms'),
            first: true
        }) }}
    {% else %}
        <input type="hidden" name="required" value>
    {% endif %}

    {{ forms.textField({
        label: "Name <span class='info'>The field label displayed to your users.</span>"|t('sprout-forms'),
        id: 'field-name',
        name: 'name',
        value: (field is defined ? field.name : null),
        errors: (field is defined ? field.getErrors('name') : null),
        required: true,
        autofocus: true,
        first: not field.allowRequired
    }) }}

    {% if field.displayInstructionsField %}
        {{ forms.textareaField({
            label: "Instructions <span class='info'>Instructions to guide your users when filling out this field.</span>"|t('sprout-forms'),
            id: 'instructions',
            class: 'nicetext',
            name: 'instructions',
            value: (field is defined ? field.instructions : null),
            errors: (field is defined ? field.getErrors('instructions') : null)
        }) }}
    {% endif %}

    {% for type,fieldObject in fieldTypes %}
        {% set isCurrent = type == className(field) %}
        <div id="{{ type|id }}"{% if not isCurrent %} class="hidden"{% endif %}>
            {% namespace 'types['~type~']' %}
                {% set _field = isCurrent ? field : craft.app.fields.createField(type) %}
                {{ _field.getSettingsHtml()|raw }}
            {% endnamespace %}
        </div>
    {% endfor %}

    {% if field['cssClasses'] is defined %}
        <hr>
        {% namespace 'types['~fieldClass~']' %}
            {% set cssClassesInstructions = "The CSS class names to output in your field's HTML."|t('sprout-forms') %}
            {% set cssClassesPlaceholder = "class1 class2"|t('sprout-forms') %}
            {% if form.getFormTemplate().getCssClassDefaults()|length %}
                {% set cssOptions = form.getClassesOptions(field.cssClasses) %}
                {{ forms.field({
                    label: "CSS Classes"|t('sprout-forms'),
                    instructions: cssClassesInstructions,
                    placeholder: cssClassesPlaceholder,
                }, sproutFields.selectOther({
                    name: 'cssClasses',
                    options: cssOptions,
                    value: field.cssClasses ?? null,
                    otherPlaceholderText: 'Custom CSS Classes'|t('sprout-forms')
                })) }}
            {% else %}
                {{ forms.textField({
                    label: "CSS Classes"|t('sprout-forms'),
                    instructions: cssClassesInstructions,
                    placeholder: cssClassesPlaceholder,
                    name: 'cssClasses',
                    value: field.cssClasses ?? null,
                    otherPlaceholderText: 'Custom CSS Classes'|t('sprout-forms')
                }) }}
            {% endif %}
        {% endnamespace %}
    {% endif %}
    <hr>

    {% if sections is defined and sections|length %}

        {% set sectionOptions = [] %}

        {% for section in sections %}
            {% set sectionOptions = sectionOptions|merge([{ label: section.name, value: section.id }]) %}
        {% endfor %}

        {{ forms.selectField({
            first: true,
            required: true,
            label: "Section <span class='info'>Which section should this field be displayed on?</span>"|t('sprout-forms'),
            id: 'tabId',
            name: 'tabId',
            options: sectionOptions,
            value: tabId
        }) }}

    {% endif %}

    {{ forms.textField({
        label: "Handle <span class='info'>How youâ€™ll refer to this field in the templates.</span>"|t('sprout-forms'),
        instructions: ""|t('sprout-forms'),
        id: 'field-handle',
        class: 'code',
        name: 'handle',
        maxlength: 64,
        value: (field is defined ? field.handle : null),
        errors: (field is defined ? field.getErrors('handle') : null),
        required: true
    }) }}

    {% set formFieldClassName = className(field) %}
    {% set formFieldClass = create(formFieldClassName) %}

    {{ forms.selectField({
        label: "Field Type <span class='info'>Create a new field if you need to update your field type. This value cannot be changed.</span>"|t('sprout-forms'),
        id: 'type',
        name: 'selectType',
        hasOptgroups: true,
        options: [
            {
                label: formFieldClass.displayName(),
                value: formFieldClassName
            }
        ],
        value: formFieldClassName,
        errors: field.getErrors('type') ?? null,
        disabled: true
    }) }}

    {{ forms.textField({
        id: 'type',
        name: 'type',
        type: 'hidden',
        value: className(field),
        errors: field.getErrors('type') ?? null
    }) }}

    {% if field is empty or field.handle is empty %}
        {% js %}
            new Craft.HandleGenerator('#field-name', '#field-handle');
            if (Craft.SproutFields) {
            Craft.SproutFields.initFields($(".content"));
            }
        {% endjs %}
    {% endif %}
</div>
